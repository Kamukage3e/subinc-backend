openapi: 3.1.0
info:
  title: Subinc Admin API
  version: "1.0"
  description: Production-grade Admin API for Subinc Cost Management SaaS. All endpoints require admin authentication and RBAC.
servers:
  - url: /api/v1
security:
  - bearerAuth: []
paths:
  /admin/users:
    get:
      summary: List admin users
      tags: [Admin, Users]
      responses:
        "200":
          description: List of admin users
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                  users:
                    type: array
                    items:
                      $ref: "#/components/schemas/AdminUser"
    post:
      summary: Create admin user
      tags: [Admin, Users]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdminUser"
      responses:
        "201":
          description: Admin user created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdminUser"
  /admin/users/{id}:
    put:
      summary: Update admin user
      tags: [Admin, Users]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdminUser"
      responses:
        "200":
          description: Admin user updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdminUser"
    delete:
      summary: Delete admin user
      tags: [Admin, Users]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Admin user deleted
  /admin/tenants:
    get:
      summary: List tenants
      tags: [Admin, Tenants]
      responses:
        "200":
          description: List of tenants
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                  tenants:
                    type: array
                    items:
                      $ref: "#/components/schemas/Tenant"
    post:
      summary: Create tenant
      tags: [Admin, Tenants]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Tenant"
      responses:
        "201":
          description: Tenant created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tenant"
  /admin/tenants/{id}:
    put:
      summary: Update tenant
      tags: [Admin, Tenants]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Tenant"
      responses:
        "200":
          description: Tenant updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tenant"
    delete:
      summary: Delete tenant
      tags: [Admin, Tenants]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Tenant deleted
  /admin/roles:
    get:
      summary: List admin roles
      tags: [Admin, Roles]
      responses:
        "200":
          description: List of admin roles
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                  roles:
                    type: array
                    items:
                      $ref: "#/components/schemas/AdminRole"
    post:
      summary: Create admin role
      tags: [Admin, Roles]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdminRole"
      responses:
        "201":
          description: Admin role created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdminRole"
  /admin/roles/{id}:
    put:
      summary: Update admin role
      tags: [Admin, Roles]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdminRole"
      responses:
        "200":
          description: Admin role updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdminRole"
    delete:
      summary: Delete admin role
      tags: [Admin, Roles]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Admin role deleted
  /admin/permissions:
    get:
      summary: List admin permissions
      tags: [Admin, Permissions]
      responses:
        "200":
          description: List of admin permissions
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                  permissions:
                    type: array
                    items:
                      $ref: "#/components/schemas/AdminPermission"
    post:
      summary: Create admin permission
      tags: [Admin, Permissions]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdminPermission"
      responses:
        "201":
          description: Admin permission created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdminPermission"
  /admin/permissions/{id}:
    put:
      summary: Update admin permission
      tags: [Admin, Permissions]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdminPermission"
      responses:
        "200":
          description: Admin permission updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdminPermission"
    delete:
      summary: Delete admin permission
      tags: [Admin, Permissions]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Admin permission deleted
  /admin/audit:
    get:
      summary: List audit logs
      tags: [Admin, Audit]
      responses:
        "200":
          description: List of audit logs
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                  logs:
                    type: array
                    items:
                      $ref: "#/components/schemas/AuditLog"
  /admin/billing:
    get:
      summary: Get billing summary
      tags: [Admin, Billing]
      responses:
        "200":
          description: Billing summary
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BillingSummary"
  /admin/security/health:
    get:
      summary: Get system health
      tags: [Admin, Security]
      responses:
        "200":
          description: System health
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SystemHealth"
  /admin/sessions:
    get:
      summary: List admin sessions
      tags: [Admin, Sessions]
      responses:
        "200":
          description: List of admin sessions
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                  sessions:
                    type: array
                    items:
                      $ref: "#/components/schemas/AdminSession"
  /admin/sessions/revoke/user:
    post:
      summary: Revoke all sessions for a user
      tags: [Admin, Sessions]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [user_id]
              properties:
                user_id:
                  type: string
      responses:
        "200":
          description: Sessions revoked
          content:
            application/json:
              schema:
                type: object
                properties:
                  revoked:
                    type: integer
  /admin/sessions/revoke/tenant:
    post:
      summary: Revoke all sessions for a tenant
      tags: [Admin, Sessions]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [tenant_id]
              properties:
                tenant_id:
                  type: string
      responses:
        "200":
          description: Sessions revoked
          content:
            application/json:
              schema:
                type: object
                properties:
                  revoked:
                    type: integer
  /admin/mfa/enable:
    post:
      summary: Enable MFA for a user
      tags: [Admin, MFA]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [user_id]
              properties:
                user_id:
                  type: string
      responses:
        "200":
          description: MFA enabled
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
  /admin/mfa/disable:
    post:
      summary: Disable MFA for a user
      tags: [Admin, MFA]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [user_id]
              properties:
                user_id:
                  type: string
      responses:
        "200":
          description: MFA disabled
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
  /admin/mfa/reset:
    post:
      summary: Reset MFA for a user
      tags: [Admin, MFA]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [user_id]
              properties:
                user_id:
                  type: string
      responses:
        "200":
          description: MFA reset
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
  /admin/mfa/status/{user_id}:
    get:
      summary: Get MFA status for a user
      tags: [Admin, MFA]
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: MFA status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MFAStatus"
  /admin/impersonate:
    post:
      summary: Impersonate a user
      tags: [Admin, Support]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [user_id]
              properties:
                user_id:
                  type: string
      responses:
        "200":
          description: Impersonation started
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
  /admin/support-tools:
    get:
      summary: Get support tools
      tags: [Admin, Support]
      responses:
        "200":
          description: Support tools info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SupportTools"
  /admin/rbac:
    get:
      summary: Get RBAC status
      tags: [Admin, RBAC]
      responses:
        "200":
          description: RBAC status
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
  /admin/delegated-admin:
    get:
      summary: Get delegated admin status
      tags: [Admin, Delegated Admin]
      responses:
        "200":
          description: Delegated admin status
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
  /admin/scim:
    get:
      summary: Get SCIM status
      tags: [Admin, SCIM]
      responses:
        "200":
          description: SCIM status
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
  /admin/audit/anomaly:
    get:
      summary: List audit anomalies
      tags: [Admin, Audit]
      responses:
        "200":
          description: List of audit anomalies
          content:
            application/json:
              schema:
                type: object
                properties:
                  anomalies:
                    type: array
                    items:
                      type: object
  /admin/rate-limits:
    get:
      summary: Get rate limit config
      tags: [Admin, Rate Limiting]
      responses:
        "200":
          description: Rate limit config
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RateLimitConfig"
    patch:
      summary: Update rate limit config
      tags: [Admin, Rate Limiting]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RateLimitConfigInput"
      responses:
        "200":
          description: Rate limit config updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RateLimitConfig"
  /admin/abuse:
    get:
      summary: Get abuse detection status
      tags: [Admin, Abuse]
      responses:
        "200":
          description: Abuse detection status
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
  /admin/alerts:
    get:
      summary: List admin alerts
      tags: [Admin, Alerts]
      responses:
        "200":
          description: List of alerts
          content:
            application/json:
              schema:
                type: object
                properties:
                  alerts:
                    type: array
                    items:
                      type: object
  /admin/secrets:
    get:
      summary: Get secrets status
      tags: [Admin, Secrets]
      responses:
        "200":
          description: Secrets status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SecretsStatus"
    patch:
      summary: Update secrets
      tags: [Admin, Secrets]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SecretsUpdateInput"
      responses:
        "200":
          description: Secrets updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SecretsStatus"
  /admin/system/config:
    get:
      summary: Get system config
      tags: [Admin, System]
      responses:
        "200":
          description: System config
          content:
            application/json:
              schema:
                type: object
  /admin/system/flags:
    get:
      summary: List feature flags
      tags: [Admin, Feature Flags]
      responses:
        "200":
          description: List of feature flags
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FeatureFlag"
    post:
      summary: Create feature flag
      tags: [Admin, Feature Flags]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FeatureFlagInput"
      responses:
        "201":
          description: Feature flag created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FeatureFlag"
    patch:
      summary: Update feature flag
      tags: [Admin, Feature Flags]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FeatureFlagInput"
      responses:
        "200":
          description: Feature flag updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FeatureFlag"
    delete:
      summary: Delete feature flag
      tags: [Admin, Feature Flags]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FeatureFlagInput"
      responses:
        "204":
          description: Feature flag deleted
  /admin/system/maintenance:
    get:
      summary: Get maintenance mode
      tags: [Admin, System]
      responses:
        "200":
          description: Maintenance mode status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MaintenanceModeStatus"
    patch:
      summary: Set maintenance mode
      tags: [Admin, System]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MaintenanceModeInput"
      responses:
        "200":
          description: Maintenance mode updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MaintenanceModeStatus"
  /admin/monitoring:
    get:
      summary: Get monitoring config
      tags: [Admin, Monitoring]
      responses:
        "200":
          description: Monitoring config
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MonitoringConfig"
    patch:
      summary: Update monitoring config
      tags: [Admin, Monitoring]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MonitoringConfigInput"
      responses:
        "200":
          description: Monitoring config updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MonitoringConfig"
  /admin/notifications:
    get:
      summary: List notifications
      tags: [Admin, Notifications]
      responses:
        "200":
          description: List of notifications
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Notification"
    post:
      summary: Send notification
      tags: [Admin, Notifications]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Notification"
      responses:
        "201":
          description: Notification sent
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Notification"
  /admin/notifications/{id}:
    get:
      summary: Get notification
      tags: [Admin, Notifications]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Notification details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Notification"
    patch:
      summary: Mark notification sent
      tags: [Admin, Notifications]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [status]
              properties:
                status:
                  type: string
      responses:
        "200":
          description: Notification status updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Notification"
  /admin/api-keys:
    get:
      summary: List API keys
      tags: [Admin, API Keys]
      responses:
        "200":
          description: List of API keys
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/APIKey"
    post:
      summary: Create API key
      tags: [Admin, API Keys]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/APIKey"
      responses:
        "201":
          description: API key created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIKey"
  /admin/api-keys/{id}:
    get:
      summary: Get API key
      tags: [Admin, API Keys]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: API key details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIKey"
    put:
      summary: Update API key
      tags: [Admin, API Keys]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/APIKey"
      responses:
        "200":
          description: API key updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIKey"
    delete:
      summary: Revoke API key
      tags: [Admin, API Keys]
      responses:
        "204":
          description: API key revoked
  /admin/api-keys/{id}/rotate:
    post:
      summary: Rotate API key
      tags: [Admin, API Keys]
      responses:
        "200":
          description: API key rotated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIKey"
  /admin/api-keys/audit:
    get:
      summary: List API key audit logs
      tags: [Admin, API Keys]
      responses:
        "200":
          description: List of API key audit logs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/APIKeyAuditLog"
  /admin/profile:
    get:
      summary: Get admin profile
      tags: [Admin, Profile]
      responses:
        "200":
          description: Admin profile
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdminUser"
  /admin/policies:
    get:
      summary: List admin policies
      tags: [Admin, Policies]
      responses:
        "200":
          description: List of policies
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Policy"
    post:
      summary: Create admin policy
      tags: [Admin, Policies]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Policy"
      responses:
        "201":
          description: Policy created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Policy"
  /admin/policies/{id}:
    get:
      summary: Get admin policy
      tags: [Admin, Policies]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Policy details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Policy"
    put:
      summary: Update admin policy
      tags: [Admin, Policies]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Policy"
      responses:
        "200":
          description: Policy updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Policy"
    delete:
      summary: Delete admin policy
      tags: [Admin, Policies]
      responses:
        "204":
          description: Policy deleted
  /admin/support/user-trace:
    get:
      summary: Trace user activity
      tags: [Admin, Support]
      parameters:
        - in: query
          name: user_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: User trace
          content:
            application/json:
              schema:
                type: object
                properties:
                  trace:
                    type: array
                    items:
                      type: object
  /admin/support/billing-trace:
    get:
      summary: Trace billing activity
      tags: [Admin, Support]
      parameters:
        - in: query
          name: account_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Billing trace
          content:
            application/json:
              schema:
                type: object
                properties:
                  trace:
                    type: array
                    items:
                      type: object
  /admin/support/impersonation-audit:
    get:
      summary: List impersonation audit logs
      tags: [Admin, Support]
      responses:
        "200":
          description: List of impersonation audit logs
          content:
            application/json:
              schema:
                type: object
                properties:
                  logs:
                    type: array
                    items:
                      type: object
  /admin/roles/{id}/permissions:
    post:
      summary: Assign permission to role
      tags: [Admin, Roles, Permissions]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [perm_id]
              properties:
                perm_id:
                  type: string
      responses:
        "200":
          description: Permission assigned
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
  /admin/roles/{id}/permissions/{perm_id}:
    delete:
      summary: Remove permission from role
      tags: [Admin, Roles, Permissions]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: path
          name: perm_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Permission removed
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
  /admin/users/{id}/effective-permissions:
    get:
      summary: Get effective permissions for a user
      tags: [Admin, Users, Permissions]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Effective permissions
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    type: string
                  effective_permissions:
                    type: array
                    items:
                      type: string
  /admin/users/all-roles-permissions:
    get:
      summary: List all user roles and permissions
      tags: [Admin, Users, Roles, Permissions]
      responses:
        "200":
          description: All user roles and permissions
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      type: object
  /admin/projects/{id}/users:
    get:
      summary: List users in a project
      tags: [Admin, Projects, Users]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: List of users with roles/permissions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AdminUser"
    post:
      summary: Add user to project
      tags: [Admin, Projects, Users]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [user_id]
              properties:
                user_id:
                  type: string
      responses:
        "201":
          description: User added to project
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdminUser"
    delete:
      summary: Remove user from project
      tags: [Admin, Projects, Users]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [user_id]
              properties:
                user_id:
                  type: string
      responses:
        "204":
          description: User removed from project
  /admin/projects/{id}/users/bulk-add:
    post:
      summary: Bulk add users to project
      tags: [Admin, Projects, Users]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [user_ids]
              properties:
                user_ids:
                  type: array
                  items:
                    type: string
      responses:
        "201":
          description: Users added to project
          content:
            application/json:
              schema:
                type: object
                properties:
                  added:
                    type: integer
  /admin/projects/{id}/users/bulk-remove:
    post:
      summary: Bulk remove users from project
      tags: [Admin, Projects, Users]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [user_ids]
              properties:
                user_ids:
                  type: array
                  items:
                    type: string
      responses:
        "200":
          description: Users removed from project
          content:
            application/json:
              schema:
                type: object
                properties:
                  removed:
                    type: integer
  /admin/projects/users/bulk-transfer:
    post:
      summary: Bulk transfer users between projects
      tags: [Admin, Projects, Users]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [from_project_id, to_project_id, user_ids]
              properties:
                from_project_id:
                  type: string
                to_project_id:
                  type: string
                user_ids:
                  type: array
                  items:
                    type: string
      responses:
        "200":
          description: Users transferred
          content:
            application/json:
              schema:
                type: object
                properties:
                  transferred:
                    type: integer
  /admin/marketing-tools:
    get:
      summary: Get marketing tools info
      tags: [Admin, Marketing]
      responses:
        "200":
          description: Marketing tools info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MarketingTools"
  /admin/ssm/blogs:
    get:
      summary: List SSM blogs
      tags: [Admin, SSM]
      responses:
        "200":
          description: List of SSM blogs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SSMBlog"
  /admin/ssm/news:
    get:
      summary: List SSM news
      tags: [Admin, SSM]
      responses:
        "200":
          description: List of SSM news
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SSMNews"
  /admin/email/providers:
    get:
      summary: List email providers
      tags: [Admin, Email]
      responses:
        "200":
          description: List of email providers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/EmailProviderConfig"
    post:
      summary: Add email provider
      tags: [Admin, Email]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EmailProviderConfig"
      responses:
        "201":
          description: Provider added
    put:
      summary: Update email provider
      tags: [Admin, Email]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EmailProviderConfig"
      responses:
        "204":
          description: Provider updated
  /admin/email/providers/{name}:
    delete:
      summary: Remove email provider
      tags: [Admin, Email]
      parameters:
        - in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Provider removed
  /admin/email/providers/{name}/default:
    patch:
      summary: Set default email provider
      tags: [Admin, Email]
      parameters:
        - in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Default provider set
  /admin/email/providers/{name}/test:
    post:
      summary: Test SMTP connection for provider
      tags: [Admin, Email]
      parameters:
        - in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "204":
          description: SMTP connection successful
  /admin/email/templates:
    get:
      summary: List email templates
      tags: [Admin, Email]
      responses:
        "200":
          description: List of email templates
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/EmailTemplate"
    post:
      summary: Add email template
      tags: [Admin, Email]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EmailTemplate"
      responses:
        "201":
          description: Template added
  /admin/email/templates/{name}:
    delete:
      summary: Remove email template
      tags: [Admin, Email]
      parameters:
        - in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Template removed
  /admin/email/team/{team}/admins:
    get:
      summary: List team admins
      tags: [Admin, Email]
      parameters:
        - in: path
          name: team
          required: true
          schema:
            type: string
      responses:
        "200":
          description: List of team admins
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
    post:
      summary: Add team admin
      tags: [Admin, Email]
      parameters:
        - in: path
          name: team
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email]
              properties:
                email:
                  type: string
      responses:
        "201":
          description: Team admin added
  /admin/email/team/{team}/admins/{email}:
    delete:
      summary: Remove team admin
      tags: [Admin, Email]
      parameters:
        - in: path
          name: team
          required: true
          schema:
            type: string
        - in: path
          name: email
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Team admin removed
  /admin/email/test:
    post:
      summary: Send test email
      tags: [Admin, Email]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [provider, to, subject, body]
              properties:
                provider:
                  type: string
                to:
                  type: string
                subject:
                  type: string
                body:
                  type: string
      responses:
        "204":
          description: Test email sent
  /admin/email/deliveries:
    get:
      summary: List email deliveries
      tags: [Admin, Email]
      parameters:
        - in: query
          name: recipient
          schema:
            type: string
        - in: query
          name: status
          schema:
            type: string
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 1000
            default: 100
        - in: query
          name: offset
          schema:
            type: integer
            minimum: 0
            default: 0
      responses:
        "200":
          description: List of email deliveries
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DeliveryStatus"
  /admin/email/conversations:
    get:
      summary: List email conversations
      tags: [Admin, Email]
      parameters:
        - in: query
          name: participant
          schema:
            type: string
      responses:
        "200":
          description: List of conversations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/EmailConversation"
    post:
      summary: Start conversation
      tags: [Admin, Email]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [subject, from, to, body]
              properties:
                subject:
                  type: string
                from:
                  type: string
                to:
                  type: array
                  items:
                    type: string
                body:
                  type: string
      responses:
        "201":
          description: Conversation started
          content:
            application/json:
              schema:
                type: object
                properties:
                  conversationID:
                    type: string
  /admin/email/conversations/{conversationID}/messages:
    get:
      summary: List messages in conversation
      tags: [Admin, Email]
      parameters:
        - in: path
          name: conversationID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: List of messages
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/EmailMessage"
    post:
      summary: Add message to conversation
      tags: [Admin, Email]
      parameters:
        - in: path
          name: conversationID
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [from, to, body]
              properties:
                from:
                  type: string
                to:
                  type: array
                  items:
                    type: string
                body:
                  type: string
      responses:
        "201":
          description: Message added
          content:
            application/json:
              schema:
                type: object
                properties:
                  messageID:
                    type: string
  /admin/orgs/{id}/users:
    get:
      summary: List users in org
      tags: [Admin, Orgs, Users]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: List of users in org
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserOrgProjectRole"
    post:
      summary: Add user to org
      tags: [Admin, Orgs, Users]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [user_id, role]
              properties:
                user_id:
                  type: string
                role:
                  type: string
                permissions:
                  type: array
                  items:
                    type: string
      responses:
        "201":
          description: User added to org
    delete:
      summary: Remove user from org
      tags: [Admin, Orgs, Users]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [user_id]
              properties:
                user_id:
                  type: string
      responses:
        "200":
          description: User removed from org
  /admin/orgs/{id}/users/bulk-add:
    post:
      summary: Bulk add users to org
      tags: [Admin, Orgs, Users]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [users]
              properties:
                users:
                  type: array
                  items:
                    type: object
                    required: [user_id, role]
                    properties:
                      user_id:
                        type: string
                      role:
                        type: string
                      permissions:
                        type: array
                        items:
                          type: string
      responses:
        "200":
          description: Users added to org
  /admin/orgs/{id}/users/bulk-remove:
    post:
      summary: Bulk remove users from org
      tags: [Admin, Orgs, Users]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [user_ids]
              properties:
                user_ids:
                  type: array
                  items:
                    type: string
      responses:
        "200":
          description: Users removed from org
          content:
            application/json:
              schema:
                type: object
                properties:
                  removed:
                    type: integer
  /admin/orgs/{id}/transfer-owner:
    patch:
      summary: Transfer org owner
      tags: [Admin, Orgs]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [new_owner_id]
              properties:
                new_owner_id:
                  type: string
      responses:
        "200":
          description: Org owner transferred
  /admin/orgs/transfer-user:
    patch:
      summary: Transfer user between orgs
      tags: [Admin, Orgs, Users]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [user_id, from_org_id, to_org_id]
              properties:
                user_id:
                  type: string
                from_org_id:
                  type: string
                to_org_id:
                  type: string
      responses:
        "200":
          description: User transferred between orgs
  /admin/orgs/bulk-transfer:
    post:
      summary: Bulk transfer users between orgs
      tags: [Admin, Orgs, Users]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [from_org_id, to_org_id, user_ids]
              properties:
                from_org_id:
                  type: string
                to_org_id:
                  type: string
                user_ids:
                  type: array
                  items:
                    type: string
      responses:
        "200":
          description: Users transferred between orgs
  /admin/orgs/{id}/users/{user_id}/role:
    patch:
      summary: Change user org role
      tags: [Admin, Orgs, Users]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: path
          name: user_id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [role]
              properties:
                role:
                  type: string
                permissions:
                  type: array
                  items:
                    type: string
      responses:
        "200":
          description: User org role changed
  /admin/orgs/{id}/users/{user_id}/effective-permissions:
    get:
      summary: Get user org effective permissions
      tags: [Admin, Orgs, Users, Permissions]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: path
          name: user_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: User org effective permissions
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    type: string
                  org_id:
                    type: string
                  effective_permissions:
                    type: array
                    items:
                      type: string
  /admin/projects/{id}/transfer-owner:
    patch:
      summary: Transfer project owner
      tags: [Admin, Projects]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [new_owner_id]
              properties:
                new_owner_id:
                  type: string
      responses:
        "200":
          description: Project owner transferred
  /admin/projects/transfer-user:
    patch:
      summary: Transfer user between projects
      tags: [Admin, Projects, Users]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [user_id, from_project_id, to_project_id]
              properties:
                user_id:
                  type: string
                from_project_id:
                  type: string
                to_project_id:
                  type: string
      responses:
        "200":
          description: User transferred between projects
  /admin/projects/{id}/users/{user_id}/effective-permissions:
    get:
      summary: Get user project effective permissions
      tags: [Admin, Projects, Users, Permissions]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: path
          name: user_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: User project effective permissions
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    type: string
                  project_id:
                    type: string
                  effective_permissions:
                    type: array
                    items:
                      type: string
  /admin/stepup:
    post:
      summary: Step-up authentication
      tags: [Admin, Security]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [user_id]
              properties:
                user_id:
                  type: string
      responses:
        "200":
          description: Step-up authentication successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
  /admin/billing/accounts:
    get:
      summary: List billing accounts
      tags: [Admin, Billing]
      responses:
        "200":
          description: List of billing accounts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BillingAccount"
    post:
      summary: Create billing account
      tags: [Admin, Billing]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BillingAccountInput"
      responses:
        "201":
          description: Billing account created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BillingAccount"
  /admin/billing/accounts/{id}:
    get:
      summary: Get billing account
      tags: [Admin, Billing]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Billing account details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BillingAccount"
    put:
      summary: Update billing account
      tags: [Admin, Billing]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BillingAccountInput"
      responses:
        "200":
          description: Billing account updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BillingAccount"
    delete:
      summary: Delete billing account
      tags: [Admin, Billing]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Billing account deleted
  /admin/billing/plans:
    get:
      summary: List billing plans
      tags: [Admin, Billing]
      responses:
        "200":
          description: List of billing plans
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BillingPlan"
    post:
      summary: Create billing plan
      tags: [Admin, Billing]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BillingPlanInput"
      responses:
        "201":
          description: Billing plan created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BillingPlan"
  /admin/billing/plans/{id}:
    get:
      summary: Get billing plan
      tags: [Admin, Billing]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Billing plan details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BillingPlan"
    put:
      summary: Update billing plan
      tags: [Admin, Billing]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BillingPlanInput"
      responses:
        "200":
          description: Billing plan updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BillingPlan"
    delete:
      summary: Delete billing plan
      tags: [Admin, Billing]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Billing plan deleted
  /admin/billing/usage:
    get:
      summary: List usage records
      tags: [Admin, Billing]
      responses:
        "200":
          description: List of usage records
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BillingUsage"
    post:
      summary: Create usage record
      tags: [Admin, Billing]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BillingUsageInput"
      responses:
        "201":
          description: Usage record created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BillingUsage"
  /admin/billing/usage/{id}:
    get:
      summary: Get usage record
      tags: [Admin, Billing]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Usage record details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BillingUsage"
    put:
      summary: Update usage record
      tags: [Admin, Billing]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BillingUsageInput"
      responses:
        "200":
          description: Usage record updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BillingUsage"
    delete:
      summary: Delete usage record
      tags: [Admin, Billing]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Usage record deleted
  /admin/billing/invoices:
    get:
      summary: List invoices
      tags: [Admin, Billing]
      responses:
        "200":
          description: List of invoices
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BillingInvoice"
    post:
      summary: Create invoice
      tags: [Admin, Billing]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BillingInvoiceInput"
      responses:
        "201":
          description: Invoice created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BillingInvoice"
  /admin/billing/invoices/{id}:
    get:
      summary: Get invoice
      tags: [Admin, Billing]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Invoice details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BillingInvoice"
    put:
      summary: Update invoice
      tags: [Admin, Billing]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BillingInvoiceInput"
      responses:
        "200":
          description: Invoice updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BillingInvoice"
    delete:
      summary: Delete invoice
      tags: [Admin, Billing]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Invoice deleted
  /admin/billing/payments:
    get:
      summary: List payments
      tags: [Admin, Billing]
      responses:
        "200":
          description: List of payments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BillingPayment"
    post:
      summary: Create payment
      tags: [Admin, Billing]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BillingPaymentInput"
      responses:
        "201":
          description: Payment created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BillingPayment"
  /admin/billing/payments/{id}:
    get:
      summary: Get payment
      tags: [Admin, Billing]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Payment details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BillingPayment"
    put:
      summary: Update payment
      tags: [Admin, Billing]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BillingPaymentInput"
      responses:
        "200":
          description: Payment updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BillingPayment"
    delete:
      summary: Delete payment
      tags: [Admin, Billing]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Payment deleted
  /admin/billing/credits:
    get:
      summary: List credits
      tags: [Admin, Billing]
      responses:
        "200":
          description: List of credits
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BillingCredit"
    post:
      summary: Create credit
      tags: [Admin, Billing]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BillingCreditInput"
      responses:
        "201":
          description: Credit created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BillingCredit"
  /admin/billing/credits/{id}:
    get:
      summary: Get credit
      tags: [Admin, Billing]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Credit details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BillingCredit"
    put:
      summary: Update credit
      tags: [Admin, Billing]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BillingCreditInput"
      responses:
        "200":
          description: Credit updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BillingCredit"
    delete:
      summary: Delete credit
      tags: [Admin, Billing]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Credit deleted
  /admin/billing/refunds:
    get:
      summary: List refunds
      tags: [Admin, Billing]
      responses:
        "200":
          description: List of refunds
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BillingRefund"
    post:
      summary: Create refund
      tags: [Admin, Billing]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BillingRefundInput"
      responses:
        "201":
          description: Refund created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BillingRefund"
  /admin/billing/refunds/{id}:
    get:
      summary: Get refund
      tags: [Admin, Billing]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Refund details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BillingRefund"
    put:
      summary: Update refund
      tags: [Admin, Billing]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BillingRefundInput"
      responses:
        "200":
          description: Refund updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BillingRefund"
    delete:
      summary: Delete refund
      tags: [Admin, Billing]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Refund deleted
  /admin/billing/payment-methods:
    get:
      summary: List payment methods
      tags: [Admin, Billing]
      responses:
        "200":
          description: List of payment methods
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BillingPaymentMethod"
    post:
      summary: Create payment method
      tags: [Admin, Billing]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BillingPaymentMethodInput"
      responses:
        "201":
          description: Payment method created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BillingPaymentMethod"
  /admin/billing/payment-methods/{id}:
    get:
      summary: Get payment method
      tags: [Admin, Billing]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Payment method details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BillingPaymentMethod"
    put:
      summary: Update payment method
      tags: [Admin, Billing]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BillingPaymentMethodInput"
      responses:
        "200":
          description: Payment method updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BillingPaymentMethod"
    delete:
      summary: Delete payment method
      tags: [Admin, Billing]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Payment method deleted
  /admin/billing/subscriptions:
    get:
      summary: List subscriptions
      tags: [Admin, Billing]
      responses:
        "200":
          description: List of subscriptions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BillingSubscription"
    post:
      summary: Create subscription
      tags: [Admin, Billing]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BillingSubscriptionInput"
      responses:
        "201":
          description: Subscription created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BillingSubscription"
  /admin/billing/subscriptions/{id}:
    get:
      summary: Get subscription
      tags: [Admin, Billing]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Subscription details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BillingSubscription"
    put:
      summary: Update subscription
      tags: [Admin, Billing]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BillingSubscriptionInput"
      responses:
        "200":
          description: Subscription updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BillingSubscription"
    delete:
      summary: Delete subscription
      tags: [Admin, Billing]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Subscription deleted
  /admin/billing/discounts:
    get:
      summary: List discounts
      tags: [Admin, Billing]
      responses:
        "200":
          description: List of discounts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BillingDiscount"
    post:
      summary: Create discount
      tags: [Admin, Billing]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BillingDiscountInput"
      responses:
        "201":
          description: Discount created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BillingDiscount"
  /admin/billing/discounts/{id}:
    get:
      summary: Get discount
      tags: [Admin, Billing]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Discount details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BillingDiscount"
    put:
      summary: Update discount
      tags: [Admin, Billing]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BillingDiscountInput"
      responses:
        "200":
          description: Discount updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BillingDiscount"
    delete:
      summary: Delete discount
      tags: [Admin, Billing]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Discount deleted
  /admin/billing/coupons:
    get:
      summary: List coupons
      tags: [Admin, Billing]
      responses:
        "200":
          description: List of coupons
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BillingCoupon"
    post:
      summary: Create coupon
      tags: [Admin, Billing]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BillingCouponInput"
      responses:
        "201":
          description: Coupon created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BillingCoupon"
  /admin/billing/coupons/{id}:
    get:
      summary: Get coupon
      tags: [Admin, Billing]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Coupon details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BillingCoupon"
    put:
      summary: Update coupon
      tags: [Admin, Billing]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BillingCouponInput"
      responses:
        "200":
          description: Coupon updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BillingCoupon"
    delete:
      summary: Delete coupon
      tags: [Admin, Billing]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Coupon deleted
  /admin/billing/webhooks:
    get:
      summary: List webhook events
      tags: [Admin, Billing]
      responses:
        "200":
          description: List of webhook events
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BillingWebhookEvent"
    post:
      summary: Create webhook event
      tags: [Admin, Billing]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BillingWebhookEventInput"
      responses:
        "201":
          description: Webhook event created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BillingWebhookEvent"
  /admin/billing/webhooks/{id}:
    get:
      summary: Get webhook event
      tags: [Admin, Billing]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Webhook event details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BillingWebhookEvent"
    put:
      summary: Update webhook event
      tags: [Admin, Billing]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BillingWebhookEventInput"
      responses:
        "200":
          description: Webhook event updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BillingWebhookEvent"
    delete:
      summary: Delete webhook event
      tags: [Admin, Billing]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Webhook event deleted
  /admin/billing/invoice-adjustments:
    get:
      summary: List invoice adjustments
      tags: [Admin, Billing]
      responses:
        "200":
          description: List of invoice adjustments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BillingInvoiceAdjustment"
    post:
      summary: Create invoice adjustment
      tags: [Admin, Billing]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BillingInvoiceAdjustmentInput"
      responses:
        "201":
          description: Invoice adjustment created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BillingInvoiceAdjustment"
  /admin/billing/invoice-adjustments/{id}:
    get:
      summary: Get invoice adjustment
      tags: [Admin, Billing]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Invoice adjustment details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BillingInvoiceAdjustment"
    put:
      summary: Update invoice adjustment
      tags: [Admin, Billing]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BillingInvoiceAdjustmentInput"
      responses:
        "200":
          description: Invoice adjustment updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BillingInvoiceAdjustment"
    delete:
      summary: Delete invoice adjustment
      tags: [Admin, Billing]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Invoice adjustment deleted
  /admin/billing/config:
    get:
      summary: Get billing config
      tags: [Admin, Billing]
      responses:
        "200":
          description: Billing config
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BillingConfig"
    post:
      summary: Update billing config
      tags: [Admin, Billing]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BillingConfigInput"
      responses:
        "200":
          description: Billing config updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BillingConfig"
    # Add referenced schemas if missing
    BillingInvoiceAdjustment:
      type: object
      required:
        - id
        - invoice_id
        - amount
        - reason
        - created_at
      properties:
        id:
          type: string
        invoice_id:
          type: string
        amount:
          type: number
        reason:
          type: string
        created_at:
          type: string
          format: date-time
    BillingInvoiceAdjustmentInput:
      type: object
      required:
        - invoice_id
        - amount
        - reason
      properties:
        invoice_id:
          type: string
        amount:
          type: number
        reason:
          type: string
    BillingConfig:
      type: object
      required:
        - tax_rate
        - fixed_fee
        - percent_fee
      properties:
        tax_rate:
          type: string
        fixed_fee:
          type: string
        percent_fee:
          type: string
    BillingConfigInput:
      type: object
      required:
        - tax_rate
        - fixed_fee
        - percent_fee
      properties:
        tax_rate:
          type: string
        fixed_fee:
          type: string
        percent_fee:
          type: string
