package admin

import (
	"github.com/gofiber/fiber/v2"
)

func (h *AdminHandler) RegisterRoutes(router fiber.Router) {
	admin := router.Group("/admin")

	admin.Get("/users", h.ListUsers)
	admin.Get("/tenants", h.ListTenants)
	admin.Get("/audit", h.ListAuditLogs)
	admin.Get("/roles", h.ListRoles)
	admin.Get("/permissions", h.ListPermissions)
	admin.Get("/billing", h.BillingSummary)
	admin.Get("/security/health", h.SystemHealth)
	admin.Get("/sessions", h.ListSessions)
	admin.Post("/impersonate", h.ImpersonateUser)
	admin.Get("/support/tools", h.SupportTools)
	admin.Get("/rbac", h.RBACStatus)
	admin.Post("/stepup", h.StepUpAuth)
	admin.Get("/delegated-admin", h.DelegatedAdminStatus)
	admin.Get("/scim", h.SCIMStatus)
	admin.Get("/audit/anomaly", h.AuditAnomalies)
	admin.Get("/rate-limits", h.GetRateLimitConfig)
	admin.Patch("/rate-limits", h.UpdateRateLimitConfig)
	admin.Get("/abuse", h.AbuseDetection)
	admin.Get("/alerts", h.Alerts)
	admin.Get("/secrets", h.GetSecretsStatus)
	admin.Patch("/secrets", h.UpdateSecrets)
	admin.Get("/system/config", h.SystemConfig)
	admin.Get("/system/flags", h.ListFeatureFlags)
	admin.Post("/system/flags", h.CreateFeatureFlag)
	admin.Patch("/system/flags", h.UpdateFeatureFlag)
	admin.Delete("/system/flags", h.DeleteFeatureFlag)
	admin.Get("/system/maintenance", h.GetMaintenanceMode)
	admin.Patch("/system/maintenance", h.SetMaintenanceMode)
	admin.Get("/monitoring", h.GetMonitoringConfig)
	admin.Patch("/monitoring", h.UpdateMonitoringConfig)
	admin.Post("/users", h.CreateUser)
	admin.Put("/users/:id", h.UpdateUser)
	admin.Delete("/users/:id", h.DeleteUser)
	admin.Post("/tenants", h.CreateTenant)
	admin.Put("/tenants/:id", h.UpdateTenant)
	admin.Delete("/tenants/:id", h.DeleteTenant)
	admin.Post("/roles", h.CreateRole)
	admin.Put("/roles/:id", h.UpdateRole)
	admin.Delete("/roles/:id", h.DeleteRole)
	admin.Post("/permissions", h.CreatePermission)
	admin.Put("/permissions/:id", h.UpdatePermission)
	admin.Delete("/permissions/:id", h.DeletePermission)
	admin.Post("/sessions/revoke/user", h.RevokeUserSessions)
	admin.Post("/sessions/revoke/tenant", h.RevokeTenantSessions)
	admin.Post("/mfa/enable", h.EnableMFA)
	admin.Post("/mfa/disable", h.DisableMFA)
	admin.Post("/mfa/reset", h.ResetMFA)
	admin.Get("/mfa/status/:user_id", h.MFAStatus)
	admin.Get("/policies", h.ListPolicies)
	admin.Get("/policies/:id", h.GetPolicy)
	admin.Post("/policies", h.CreatePolicy)
	admin.Put("/policies/:id", h.UpdatePolicy)
	admin.Delete("/policies/:id", h.DeletePolicy)
	admin.Get("/support/user-trace", h.UserTrace)
	admin.Get("/support/billing-trace", h.BillingTrace)
	admin.Get("/support/impersonation-audit", h.ImpersonationAudit)
	admin.Post("/roles/:id/permissions", h.AssignPermissionToRole)
	admin.Delete("/roles/:id/permissions/:perm_id", h.RemovePermissionFromRole)
	admin.Get("/api-keys", h.ListAPIKeys)
	admin.Post("/api-keys", h.CreateAPIKey)
	admin.Get("/api-keys/:id", h.GetAPIKey)
	admin.Put("/api-keys/:id", h.UpdateAPIKey)
	admin.Delete("/api-keys/:id", h.RevokeAPIKey)
	admin.Post("/api-keys/:id/rotate", h.RotateAPIKey)
	admin.Get("/api-keys/audit", h.ListAPIKeyAuditLogs)
	admin.Get("/notifications", h.ListNotifications)
	admin.Post("/notifications", h.SendNotification)
	admin.Get("/notifications/:id", h.GetNotification)
	admin.Patch("/notifications/:id", h.MarkNotificationSent)
	// Add more admin endpoints as needed
}

func RegisterRoutes(router fiber.Router, handler *AdminHandler) {
	handler.RegisterRoutes(router)
}
